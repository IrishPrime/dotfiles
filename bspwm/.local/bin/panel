#!/bin/bash

PANEL_FIFO=/tmp/panel-fifo
PANEL_HEIGHT=24
PANEL_FONT="DejaVuSansMono:size=11"
ICON_FONT="FontAwesome:size=11"
ICON_FONT2="fontcustom:size=11"
WLAN_DEV="wlp2s0"

source colors

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &

# Clock
while true; do
	echo -e 'C\uf017' $(date +"%H:%M");
	sleep 5;
done > "$PANEL_FIFO" &

# Date
while true; do
	echo -e 'D\uf073' $(date +'%b %d')
	sleep 5
done > $PANEL_FIFO &

# Battery
while true; do
	BATT_LEVEL=$(acpi -b | grep -o '[[:digit:]]\+%' | cut -d'%' -f1)
	if [ ${BATT_LEVEL} -ge 80 ]; then
		echo -e "B%{F${green}}\uf116 ${BATT_LEVEL}%%{F-}"
	elif [ ${BATT_LEVEL} -ge 30 -a ${BATT_LEVEL} -lt 80 ]; then
		echo -e "B%{F${yellow}}\uf117 ${BATT_LEVEL}%%{F-}"
	elif [ ${BATT_LEVEL} -lt 30 ]; then
		echo -e "B%{F${red}}%{T3}\uf115%{T1} ${BATT_LEVEL}%%{F-}"
	fi

	sleep 30;
done > "$PANEL_FIFO" &

# ALSA Volume
while true; do
	ALSA_VOLUME=$(amixer get Master | grep 'Mono: Playback' | grep -o '[[:digit:]]\+%' | cut -d'%' -f1)
	ALSA_STATE=$(amixer get Master | grep 'Mono: Playback' | grep -o '\[on\]')

	if [ $ALSA_STATE ]; then
		if [ $ALSA_VOLUME -ge 50 ]; then
			echo -e 'V\uf028' $ALSA_VOLUME
		elif [ $ALSA_VOLUME -gt 0 -a $ALSA_VOLUME -lt 50 ]; then
			echo -e 'V\uf027' $ALSA_VOLUME
		elif [ $ALSA_VOLUME -eq 0 ]; then
			echo -e 'V\uf026' $ALSA_VOLUME
		fi
	else
		echo -e "V%{F${red}}\uf026 MM%{F-}"
	fi
	sleep 0.1
done > $PANEL_FIFO &

# WiFi
while true; do
	WIFI_SSID=$(iw ${WLAN_DEV} link | grep 'SSID' | cut -d' ' -f2)
	WIFI_SIGNAL=$(iw ${WLAN_DEV} link | grep 'signal' | cut -d' ' -f2)
	echo -e L'\uf1eb' $WIFI_SSID '|' $WIFI_SIGNAL
	sleep 10
done > $PANEL_FIFO &

# Power
echo -e 'P\uf011' > $PANEL_FIFO &

# Music Controls
while true; do
	if [ ! -e ~/.config/mpd/pid ]; then
		echo -e 'R%{T3}%{A:mpd; mpc play:}\uf198 %{A}%{T-}'
		sleep 1
		continue
	fi

	SONG_NAME=$(mpc | head -n1)
	if [[ -n $(mpc status | grep paused) ]]; then
		echo -e "R%{T3}%{A:mpc prev:}\uf19c%{A} %{A:mpc play:}\uf198%{A} %{A:mpc next:}\uf17c%{A}%{T1} %{A:mpc-notification.sh:}$SONG_NAME%{A}"
	else
		echo -e "R%{T3}%{A:mpc prev:}\uf19c%{A} %{A:mpc pause:}\uf191%{A} %{A:mpc next:}\uf17c%{A}%{T1} %{A:mpc-notification.sh:}$SONG_NAME%{A}"
	fi

	sleep 1
done > $PANEL_FIFO &

panel_bar < ${PANEL_FIFO} | lemonbar -g x${PANEL_HEIGHT} -f "${PANEL_FONT}" -f "${ICON_FONT}" -f "${ICON_FONT2}" -F "${COLOR_FOREGROUND}" -B "${COLOR_BACKGROUND}" -u 2 | bash &

wait
